version: '3'
services:
  be:
    restart: always
    build:
      context: ./BackEnd
    networks:
      - mcmp_cost_network
    ports:
      - "9090:9090"
    environment:
      spring.datasource.hikari.cost.optimize.jdbc-url: ${COST_DB_URL}
      spring.datasource.hikari.cost.optimize.username: ${COST_DB_USERNM}
      spring.datasource.hikari.cost.optimize.password: ${COST_DB_PW}
      tumblebug.url: ${TUMBLEBUG_URL}
      tumblebug.username: ${TUMBLEBUG_USERNAME}
      tumblebug.password: ${TUMBLEBUG_PASSWORD}
  fe:
    restart: always
    build:
      context: ./cost-fe
    networks:
      - mcmp_cost_network
    ports:
      - "8080:80"
  costcollector:
    restart: always
    build:
      context: ./costCollector
    networks:
      - mcmp_cost_network
    ports:
      - "8081:8081"
    environment:
      spring.datasource.hikari.batch.jdbc-url: ${COST_DB_URL}
      spring.datasource.hikari.batch.username: ${COST_DB_USERNM}
      spring.datasource.hikari.batch.password: ${COST_DB_PW}
      unusedBatchCronSchedule: ${COST_COLLECT_UNUSED_CRON_SCHEDULE}
      curBatchCronSchedule: ${COST_COLLECT_CUR_CRON_SCHEDULE}
      aws.data.export.name: ${AWS_CUR_EXPORT_NAME}
      aws.data.export.path.prefix: ${AWS_CUR_EXPORT_PATH_PREFIX}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  costprocessor:
    restart: always
    build:
      context: ./costProcessor
    networks:
      - mcmp_cost_network
    ports:
      - "8082:8082"
    environment:
      spring.datasource.hikari.batch.jdbc-url: ${COST_DB_URL}
      spring.datasource.hikari.batch.username: ${COST_DB_USERNM}
      spring.datasource.hikari.batch.password: ${COST_DB_PW}
      unusedProcessCronSchedule: ${COST_PROCESS_UNUSED_CRON_SCHEDULE}
      abnormalProcessCronSchedule: ${COST_PROCESS_ABNORMAL_CRON_SCHEDULE}
      cost.selector.url: ${COST_SELECTOR_URL}
      opti.alarm.url: ${ALARM_URL}
  costselector:
    restart: always
    build:
      context: ./costSelector
    networks:
      - mcmp_cost_network
    ports:
      - "8083:8083"
    environment:
      spring.datasource.hikari.cost.optimize.jdbc-url: ${COST_DB_URL}
      spring.datasource.hikari.cost.optimize.username: ${COST_DB_USERNM}
      spring.datasource.hikari.cost.optimize.password: ${COST_DB_PW}
      opti.alarm.url: ${ALARM_URL}
  alarmservice:
    restart: always
    build:
      context: ./AlarmService
    networks:
      - mcmp_cost_network
    ports:
      - "9000:9000"
    environment:
      spring.datasource.hikari.slack.jdbc-url: ${SLACK_DB_URL}
      spring.datasource.hikari.slack.username: ${SLACK_DB_USERNM}
      spring.datasource.hikari.slack.password: ${SLACK_DB_PW}
      spring.datasource.hikari.mailing.jdbc-url: ${MAIL_DB_URL}
      spring.datasource.hikari.mailing.username: ${MAIL_DB_USERNM}
      spring.datasource.hikari.mailing.password: ${MAIL_DB_PW}
      spring.datasource.hikari.history.jdbc-url: ${COST_DB_URL}
      spring.datasource.hikari.history.username: ${COST_DB_USERNM}
      spring.datasource.hikari.history.password: ${COST_DB_PW}
  assetcollector:
    restart: always
    build:
      context: ./assetCollector
    networks:
      - mcmp_cost_network
    ports:
      - "8091:8091"
    environment:
      spring.datasource.hikari.batch.jdbc-url: ${COST_DB_URL}
      spring.datasource.hikari.batch.username: ${COST_DB_USERNM}
      spring.datasource.hikari.batch.password: ${COST_DB_PW}
      asset.collect.url: ${ASSET_MONITORING_SERVER}
      assetCollectBatchCronSchedule: ${ASSET_COLLECT_BATCH_CRON_SCHEDULE}
networks:
  mcmp_cost_network:
    driver: bridge

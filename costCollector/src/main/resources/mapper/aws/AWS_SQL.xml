<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aws">
    <update id="dropTable" parameterType="String">
        <if test="drop_table_nm != null">
            DROP TABLE IF EXISTS tbl_table_billing_detail_${value}
        </if>
    </update>

    <update id="createTable" parameterType="String">
        <if test="create_table != null">
            CREATE TABLE tbl_table_billing_detail_${value} (
            `lineitem_usageaccountid` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_productcode` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_resourceid` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_lineitemtype` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `product_instancetype` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `pricing_unit` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_usageamount` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_unblendedcost` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_blendedcost` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_usagestartdate` timestamp NULL DEFAULT NULL,
            `lineitem_usageenddate` timestamp NULL DEFAULT NULL,
            `pricing_publicondemandcost` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `pricing_publicondemandrate` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `lineitem_currencycode` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
            `product_sku` varchar(100) DEFAULT NULL,
            `product_region` varchar(50) DEFAULT NULL,
            `product_instanceFamily` varchar(100) DEFAULT NULL,
            `product_location` varchar(100) DEFAULT NULL,
            `lineitem_operation` varchar(100) DEFAULT NULL,
            `product_instancetypefamily` varchar(20) DEFAULT NULL,
            `lineitem_usagetype` varchar(100) DEFAULT NULL,
            `product_vcpu` varchar(30) DEFAULT NULL,
            `product_memory` varchar(30) DEFAULT NULL
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
        </if>
    </update>

    <insert id="insertCURProcess" parameterType="com.mcmp.collector.model.cur.CurProcessModel">
        INSERT INTO cur_process_info(csp, payer_account, collect_date, certifed_fixed_yn, certifed_fixed_date, object_key)
        VALUES (#{csp},
                #{payer_account},
                #{collect_date},
                #{certifed_fixed_yn},
                #{certifed_fixed_date},
                #{object_key})
            ON DUPLICATE KEY UPDATE certifed_fixed_yn=#{certifed_fixed_yn},
                                    certifed_fixed_date=#{certifed_fixed_date},
                                    object_key=#{object_key}
    </insert>

    <select id="getTodoCURCollectMonth" parameterType="String" resultType="com.mcmp.collector.model.cur.CurProcessModel">
        SELECT cpi.csp AS csp
             , cpi.payer_account AS payer_account
             , cpi.collect_date AS collect_date
             , cpi.object_key AS object_key
          FROM cur_process_info cpi
         WHERE 1=1
           AND cpi.csp='AWS'
           AND cpi.payer_account=#{value}
           AND cpi.certifed_fixed_yn='N'
    </select>

    <select id="getPayerID" resultType="String">
        SELECT tcura.mcmp_user_id AS payerID
          FROM temp_cmp_user_role_arn tcura
         WHERE 1=1
           AND tcura.csp='AWS'
    </select>

    <select id="getUserArn" parameterType="String" resultType="com.mcmp.collector.model.aws.UserArnModel">
        SELECT tcui.mcmp_user_id AS mcmp_id
             , tcura.csp AS csp
             , tcura.role_arn AS role_arn
         FROM temp_cmp_user_role_arn tcura
         JOIN temp_cmp_user_info tcui
           ON tcui.mcmp_user_id = tcura.mcmp_user_id
        WHERE 1=1
          AND tcura.csp='AWS'
          AND tcui.mcmp_user_id=#{value}
        GROUP BY tcui.mcmp_user_id, tcura.csp, tcura.role_arn
        LIMIT 1
    </select>

    <select id="getDataExportBucket" parameterType="String" resultType="com.mcmp.collector.model.aws.DataExportBucketModel">
        SELECT tcui.mcmp_user_id AS mcmp_id
             , tcura.csp AS csp
             , tcura.bucket_nm AS butcket_name
          FROM temp_cmp_user_role_arn tcura
          JOIN temp_cmp_user_info tcui
            ON tcui.mcmp_user_id = tcura.mcmp_user_id
         WHERE 1=1
           AND tcura.csp='AWS'
           AND tcui.mcmp_user_id=#{value}
         GROUP BY tcui.mcmp_user_id,tcura.csp, tcura.bucket_nm
         LIMIT 1
    </select>

    <insert id="insertCurOriginBatch" parameterType="java.util.List">
        INSERT INTO cur_origin(lineitem_usageaccountid,
                                    lineitem_productcode,
                                    lineitem_resourceid,
                                    lineitem_lineitemtype,
                                    product_instancetype,
                                    pricing_unit,
                                    lineitem_usageamount,
                                    lineitem_unblendedcost,
                                    lineitem_blendedcost,
                                    lineitem_usagestartdate,
                                    lineitem_usageenddate,
                                    pricing_publicondemandcost,
                                    pricing_publicondemandrate,
                                    lineitem_currencycode,
                                    data_collect_date,
                                    data_collect_seq,
                                    product_sku,
                                    product_region,
                                    product_instanceFamily,
                                    product_location,
                                    lineitem_operation,
                                    product_instancetypefamily,
                                    lineitem_usagetype,
                                    product_vcpu,
                                    product_memory)
        VALUES
            <foreach collection="list" item="item" separator=",">
            (#{item.lineitem_usageaccountid},
                #{item.lineitem_productcode},
                #{item.lineitem_resourceid},
                #{item.lineitem_lineitemtype},
                #{item.product_instancetype},
                #{item.pricing_unit},
                #{item.lineitem_usageamount},
                #{item.lineitem_unblendedcost},
                #{item.lineitem_blendedcost},
                #{item.lineitem_usagestartdate},
                #{item.lineitem_usageenddate},
                #{item.pricing_publicondemandcost},
                #{item.pricing_publicondemandrate},
                #{item.lineitem_currencycode},
                #{item.collect_date},
                #{item.seq},
                #{item.product_sku},
                #{item.product_region},
                #{item.product_instanceFamily},
                #{item.product_location},
                #{item.lineitem_operation},
                #{item.product_instancetypefamily},
                #{item.lineitem_usagetype},
                #{item.product_vcpu},
                #{item.product_memory})
            </foreach>
    </insert>

    <insert id="insertCurDetailBatch" parameterType="com.mcmp.collector.model.cur.AwsCurDetailModel">
        INSERT INTO tbl_table_billing_detail_${suffix}(lineitem_usageaccountid,
                                    lineitem_productcode,
                                    lineitem_resourceid,
                                    lineitem_lineitemtype,
                                    product_instancetype,
                                    pricing_unit,
                                    lineitem_usageamount,
                                    lineitem_unblendedcost,
                                    lineitem_blendedcost,
                                    lineitem_usagestartdate,
                                    lineitem_usageenddate,
                                    pricing_publicondemandcost,
                                    pricing_publicondemandrate,
                                    lineitem_currencycode,
                                    product_sku,
                                    product_region,
                                    product_instanceFamily,
                                    product_location,
                                    lineitem_operation,
                                    product_instancetypefamily,
                                    lineitem_usagetype,
                                    product_vcpu,
                                    product_memory)
        VALUES
        <foreach collection="batchList" item="item" separator=",">
            (#{item.lineitem_usageaccountid},
            #{item.lineitem_productcode},
            #{item.lineitem_resourceid},
            #{item.lineitem_lineitemtype},
            #{item.product_instancetype},
            #{item.pricing_unit},
            #{item.lineitem_usageamount},
            #{item.lineitem_unblendedcost},
            #{item.lineitem_blendedcost},
            #{item.lineitem_usagestartdate},
            #{item.lineitem_usageenddate},
            #{item.pricing_publicondemandcost},
            #{item.pricing_publicondemandrate},
            #{item.lineitem_currencycode},
            #{item.product_sku},
            #{item.product_region},
            #{item.product_instanceFamily},
            #{item.product_location},
            #{item.lineitem_operation},
            #{item.product_instancetypefamily},
            #{item.lineitem_usagetype},
            #{item.product_vcpu},
            #{item.product_memory})
        </foreach>
    </insert>

    <insert id="insertRscGrpMeta" parameterType="com.mcmp.collector.model.cur.RscGrpMetaModel">
        INSERT INTO servicegroup_meta(csp_type, csp_account, csp_instanceid, service_cd)
        SELECT #{csp}, #{account}, lineitem_resourceid, #{prj_cd}
          FROM tbl_table_billing_detail_${year_month}
         GROUP BY lineitem_resourceid
            ON DUPLICATE KEY UPDATE
                csp_instanceid = values(csp_instanceid)
    </insert>

    <insert id="insertMonthlySum" parameterType="String">
        INSERT INTO monthly_summation(`year_month` , project_cd, csp, total_cost)
        SELECT ${value}
             , sm.service_cd
             , sm.csp_type
             , COALESCE(SUM(ttbd.lineitem_unblendedcost), 0)
          FROM tbl_table_billing_detail_${value} ttbd
          LEFT JOIN servicegroup_meta sm
            ON sm.csp_instanceid = ttbd.lineitem_resourceid
         GROUP BY sm.csp_type
               , sm.service_cd
            ON DUPLICATE KEY update total_cost = values(total_cost)
    </insert>

    <insert id="insertDailySumByProduct" parameterType="String">
        INSERT INTO daily_summation_by_product (`date`, product, total_cost, project_cd, csp_type)
        SELECT DATE(ttbd.lineitem_usagestartdate) AS `date`
             , ttbd.lineitem_productcode AS product
             , COALESCE(SUM(ttbd.lineitem_unblendedcost), 0) AS total_cost
             , sm.service_cd AS project_cd
             , 'AWS' as csp_type
          FROM tbl_table_billing_detail_${value} ttbd
          LEFT JOIN servicegroup_meta sm
            ON sm.csp_instanceid = ttbd.lineitem_resourceid
         WHERE 1=1
         GROUP BY ttbd.lineitem_productcode
             , DATE(ttbd.lineitem_usagestartdate)
             , sm.service_cd
            ON DUPLICATE KEY UPDATE total_cost = values(total_cost)
    </insert>

</mapper>
